name: Run Isabl CLI tests

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      # If isabl_api is private, you may need to use a PAT (GH_PAT secret) instead of GITHUB_TOKEN
      # because GITHUB_TOKEN typically can't access private repos outside the current org

    steps:
    - name: Configure git and verify access
      run: | 
        # Check if token is set
        if [ -z "$TOKEN" ]; then
          echo "❌ ERROR: GH_PAT secret is not set"
          echo "Please add GH_PAT secret in repository settings"
          exit 1
        fi
        
        echo "=== Token Validation ==="
        echo "Token length: ${#TOKEN} characters"
        echo "Token prefix: ${TOKEN:0:4}..." 
        echo "Token type: Classic Personal Access Token"
        echo ""
        
        # First, verify token works with GitHub API
        echo "=== Testing token with GitHub API ==="
        API_RESPONSE=$(curl -s -w "\nHTTP_CODE:%{http_code}" -H "Authorization: token ${TOKEN}" -H "Accept: application/vnd.github.v3+json" https://api.github.com/user)
        HTTP_CODE=$(echo "$API_RESPONSE" | grep "HTTP_CODE" | cut -d: -f2)
        API_BODY=$(echo "$API_RESPONSE" | sed '/HTTP_CODE/d')
        
        if [ "$HTTP_CODE" = "200" ]; then
          echo "✅ Token is valid and authenticated"
          echo "Authenticated as: $(echo "$API_BODY" | grep -o '"login":"[^"]*' | cut -d'"' -f4 || echo 'unknown')"
        else
          echo "❌ Token authentication failed (HTTP $HTTP_CODE)"
          echo "Response: $API_BODY"
          echo ""
          echo "This means the token itself is invalid or expired"
          exit 1
        fi
        echo ""
        
        # Test repository access via API
        echo "=== Testing repository access via API ==="
        REPO_RESPONSE=$(curl -s -w "\nHTTP_CODE:%{http_code}" -H "Authorization: token ${TOKEN}" -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/papaemmelab/isabl_api)
        REPO_HTTP_CODE=$(echo "$REPO_RESPONSE" | grep "HTTP_CODE" | cut -d: -f2)
        REPO_BODY=$(echo "$REPO_RESPONSE" | sed '/HTTP_CODE/d')
        
        if [ "$REPO_HTTP_CODE" = "200" ]; then
          echo "✅ Repository is accessible via API"
        else
          echo "❌ Cannot access repository via API (HTTP $REPO_HTTP_CODE)"
          echo "Response: $REPO_BODY"
          echo ""
          echo "Possible issues:"
          echo "  1. Token doesn't have 'repo' scope"
          echo "  2. Token doesn't have access to papaemmelab organization"
          echo "  3. Repository is private and token lacks permissions"
        fi
        echo ""
        
        # Configure git to use token for GitHub URLs
        echo "=== Configuring Git ==="
        git config --global url."https://x-access-token:${TOKEN}@github.com/".insteadOf "https://github.com/"
        
        # Verify git config was set
        echo "Git config after setup:"
        git config --global --get-regexp url
        echo ""
        
        # Test access via git
        echo "=== Testing access via Git ==="
        echo "Testing access to papaemmelab/isabl_api..."
        GIT_OUTPUT=$(git ls-remote https://github.com/papaemmelab/isabl_api.git HEAD 2>&1)
        GIT_EXIT_CODE=$?
        
        if [ $GIT_EXIT_CODE -eq 0 ]; then
          echo "✅ Successfully accessed papaemmelab/isabl_api via git"
          echo "$GIT_OUTPUT" | head -1
        else
          echo "❌ ERROR: Cannot access papaemmelab/isabl_api via git"
          echo ""
          echo "Git error output:"
          echo "$GIT_OUTPUT"
          echo ""
          echo "=== Troubleshooting Steps ==="
          echo "1. Verify GH_PAT secret is set correctly in repository settings"
          echo "2. Token should have 'repo' scope (full control of private repositories)"
          echo "3. Token must have access to papaemmelab organization"
          echo "4. Token should not be expired"
          echo "5. Repository spelling: papaemmelab/isabl_api (check case sensitivity)"
          echo ""
          echo "If API test passed but git fails, try:"
          echo "  - Regenerating the token"
          echo "  - Ensuring token has 'repo' scope specifically"
          exit 1
        fi
      env:
        TOKEN: ${{ secrets.GH_PAT }}

    - name: Checkout code
      uses: actions/checkout@v4
      with:
        persist-credentials: false  # Don't overwrite our git config for authentication

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Verify git config persists
      run: |
        echo "Verifying git config is still active:"
        git config --global --get-regexp url || echo "⚠️ No URL rewrite found - authentication may fail"
        echo ""
        echo "Re-testing repository access:"
        if git ls-remote https://github.com/papaemmelab/isabl_api.git HEAD > /dev/null 2>&1; then
          echo "✅ Repository still accessible"
        else
          echo "⚠️ Warning: Repository access check failed - tests may fail"
        fi

    - name: Run tests
      run: bash tests/test-with-compose.sh

    - name: Upload coverage reports to Codecov with GitHub Action
      uses: codecov/codecov-action@v4.2.0
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}